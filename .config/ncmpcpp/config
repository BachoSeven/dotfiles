[mpd]
mpd_connection_timeout = 5
mpd_music_dir = "~/slsk/music"
mpd_crossfade_time = 3

[global]
ncmpcpp_directory = ~/.config/ncmpcpp
lyrics_directory = ~/.local/share/lyrics
playlist_disable_highlight_delay = 1
message_delay_time = 1
colors_enabled = yes

[visualizer]
visualizer_data_source = /tmp/mpd.fifo
visualizer_output_name = Visualizer
visualizer_in_stereo = yes
visualizer_autoscale = yes
visualizer_fps = 60
[[spectrum]]
visualizer_type = spectrum
visualizer_look = "●▮"
visualizer_color = blue, cyan, green, yellow, magenta, red
visualizer_spectrum_smooth_look = yes
visualizer_spectrum_dft_size = 4
visualizer_spectrum_gain = 20
visualizer_spectrum_hz_min = 20
visualizer_spectrum_hz_max = 20000
# visualizer_color = 47, 83, 119, 155, 191, 227, 221, 215, 209, 203, 197, 161
# visualizer_look = "▌▌"
# visualizer_look = "▒░"

## Custom command that will be executed each time song changes
execute_on_song_change = musnotify
# execute_on_song_change = notify-send -i ~/.local/share/icons/vinyl.svg "Now Playing" "$(mpc --format '%title% \n%artist% - %album%' current)"
[misc]
discard_colors_if_item_is_selected = yes
show_duplicate_tags = no
incremental_seeking = yes
seek_time = 2
volume_change_step = 5
autocenter_mode = yes
centered_cursor = yes
data_fetching_delay = "no" # useful for remote servers
media_library_primary_tag = "album_artist" # artist, album_artist, date, genre, composer, performer.
media_library_sort_by_mtime = yes
default_find_mode = wrapped
lyrics_fetchers = genius, azlyrics, justsomelyrics, jahlyrics, tekstowo, internet
follow_now_playing_lyrics = yes
fetch_lyrics_for_current_song_in_background = yes
store_lyrics_in_song_dir = no
generate_win32_compatible_filenames = no
allow_for_physical_item_deletion = no
space_add_mode = add_remove
show_hidden_files_in_local_browser = no

## How shall screen switcher work?
##
## - "previous" - switch between the current and previous screen.
## - "screen1,...,screenN" - switch between given sequence of screens.
##
## Screens available for use: help, playlist, browser, search_engine,
## media_library, playlist_editor, tag_editor, outputs, visualizer, clock,
## lyrics, last_fm.
##
#screen_switcher_mode = playlist, browser
##
## Note: You can define startup screen by choosing screen from the list above.
##
startup_screen = playlist
## Note: You can define startup slave screen by choosing screen from the list
## above or an empty value for no slave screen.
startup_slave_screen =
startup_slave_screen_focus = no

## Default width of locked screen (in %).  Acceptable values are from 20 to 80.
locked_screen_width_part = 44
ask_for_locked_screen_width_part = no

jump_to_now_playing_song_at_start = yes

ask_before_clearing_playlists = no
clock_display_seconds = yes
display_volume_level = yes
display_bitrate = yes
display_remaining_time = no

## Available values: none, basic, extended, perl.
regular_expressions = basic

## Note: if below is enabled, ncmpcpp will ignore leading "The" word while sorting items in browser, tags in media library, etc.
ignore_leading_the = yes
## Note: if below is enabled, ncmpcpp will ignore diacritics while searching and
## filtering lists. This takes an effect only if boost was compiled with ICU
## support.
ignore_diacritics = yes
block_search_constraints_change_if_items_found = yes
mouse_support = yes
mouse_list_scroll_whole_page = no
lines_scrolled = 1
empty_tag_marker=" -- ‼ -- "
search_engine_default_search_mode = 2
external_editor = nvim
use_console_editor = yes
##### colors definitions #####
##
## It is possible to set a background color by setting a color value
## "<foreground>_<background>", e.g. red_black will set foregound color to red
## and background color to black.
##
## In addition, for terminals that support 256 colors it is possible to set one
## of them by using a number in range [1, 256] instead of color name,
## e.g. numerical value corresponding to red_black is 2_1. To find out if the
## terminal supports 256 colors, run ncmpcpp and check out the bottom of the
## help screen for list of available colors and their numerical values.
##
## What is more, there are two special values for the background color:
## "transparent" and "current". The first one explicitly sets the background to
## be transparent, while the second one allows you to preserve current
## background color and change only the foreground one. It's used implicitly
## when background color is not specified.
##
## Moreover, it is possible to attach format information to selected color
## variables by appending to their end a colon followed by one or more format
## flags, e.g. black:b or red:ur. The following variables support this syntax:
## visualizer_color, color1, color2, empty_tag_color, volume_color,
## state_line_color, state_flags_color, progressbar_color,
## progressbar_elapsed_color, player_state_color, statusbar_time_color,
## alternative_ui_separator_color.
empty_tag_color = 8
header_window_color = 13
volume_color = yellow
state_line_color = blue
state_flags_color = green:b
main_window_color = white
progressbar_color = 1_1
progressbar_elapsed_color = blue:b
statusbar_color = magenta
statusbar_time_color = cyan:b
player_state_color = default
alternative_ui_separator_color = blue

[modes]
playlist_display_mode = columns
browser_display_mode = columns
search_engine_display_mode = columns
playlist_editor_display_mode = columns

[appearance]
[[progressbar]]
## Yes, I have gathered all of the best-looking progressbar for ncmpcpp from all over the internet.
# progressbar_look = "•••"
# progressbar_look = "---"
# progressbar_look = "─>─"
# progressbar_look = "▀▀ "
# progressbar_look = "━■"
# progressbar_look = "⠒⠒⠐"
# progressbar_look = "━╋━"
# progressbar_look = "━━━"
# progressbar_look = "━━─"
# progressbar_look = "─╼─"
# progressbar_look = "╼·"
# progressbar_look = "=>"
# progressbar_look = "─- "
# progressbar_look = "░█ "
# progressbar_look = "▒▒░"
progressbar_look = "▒▓░"
# progressbar_look = "▃▃▃" # Very minimalistic
# progressbar_look = "┅┅┄"
# progressbar_look = "─⊙┄"
# progressbar_look = "─➞─"
# progressbar_look = "─┅─"
# progressbar_look = "▪▪▪"
# progressbar_look = "▪▪▫"
# progressbar_look = "◾◾◽"
# progressbar_look = "───"
# progressbar_look = "▁▁▁"
# progressbar_look = "‒‒‒"
# progressbar_look = "■◣ "
# progressbar_look = "◈◆◇"
# progressbar_look = "→→"
[ui]
header_visibility = "no" # For classic interface
user_interface = alternative
enable_window_title = no
connected_message_on_startup = no
song_status_format = $b{{$8%t}} $3by {$4%a{ $3in $7%b{ (%y)}} $3}|{$8%f}
song_library_format = {%n - }{%t}|{%f}
alternative_header_first_line_format = $b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b
alternative_header_second_line_format = {$b{$6%a$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}
# Normal
now_playing_prefix = "$b$3$8 "
now_playing_suffix = $/b$8
current_item_prefix = $(blue)$b
current_item_suffix = $(end)$/b
current_item_inactive_column_prefix = $(green)
current_item_inactive_column_suffix = $(end)
song_list_format = {$4%a - }{%t}|{$8%f$9}$R{$3%l$9}
# Customized
#
# current_item_prefix = "$/b$b $7 $8 $/b "
# current_item_suffix = "      $8"
# song_list_format = " {%t $R   $8%a$8}|{%f $R   $8%l$8} $8" # This does nothing(?)

##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of the column)[color of the column]{displayed tag}
##
## Note: Width is by default in %, if you want a column to have fixed size, add
## 'f' after the value, e.g. (10)[white]{a} will be the column that take 10% of
## screen (so the real width will depend on actual screen size), whereas
## (10f)[white]{a} will take 10 terminal cells, no matter how wide the screen
## is.
##
## - color is optional (if you want the default one, leave the field empty).
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes, separated with
##   character ':', e.g. {lr:Length} gives you right aligned column of lengths
##   named "Length".
##
## - define sequence of tags, that have to be displayed in case predecessor is
##   empty in a way similar to the one in classic song format, i.e. using '|'
##   character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
##   display artist tag and then composer and performer if previous ones are not
##   available.
##
song_columns_list_format = (7f)[magenta]{l} (25)[cyan]{a} (50)[white]{t|f:Title} (20)[red]{b}
# song_columns_list_format = "(50)[]{t|fr:Title} (45)[blue]{a}"

#browser_playlist_prefix = "$2playlist$9 "

#selected_item_prefix = $6
#selected_item_suffix = $9

#modified_item_prefix = $3> $9
##
## Note: attributes are not supported for the following variables.
##
#song_window_title_format = {%a - }{%t}|{%f}
##
## Note: Below variables are used for sorting songs in browser.  The sort mode
## determines how songs are sorted, and can be used in combination with a sort
## format to specify a custom sorting format.  Available values for
## browser_sort_mode are "type", "name", "mtime", "format" and "none".
##
browser_sort_mode = name
browser_sort_format = {%l} {%a - }{%t}|{%f}

# █▓▒░ cheat sheet
# %l - length
# %f - filename
# %D - directory
# %a - artist
# %t - title
# %b - album
# %y - year
# %n - track number (01/12 -> 01)
# %N - full track info (01/12 -> 01/12)
# %g - genre
# %c - composer
# %p - performer
# %d - disc
# %C - comment
# $R - begin right alignment
# █▓▒░ colors
# $0 - default window color
# $1 - black
# $2 - red
# $3 - green
# $4 - yellow
# $5 - blue
# $6 - magenta
# $7 - cyan
# $8 - white
# $9 - end of current color
# b - bold text
# u - underline text
# r - reverse colors
# a - use alternative character set

# vim: ft=cfg
